type AcademicBody {
    id: ID!
    name: String
    active: Boolean
    uabc_areas_id: Int
    discipline_id: Int
    lead_employee_id: Int
    prodep_area_id: Int
    employees: [Employee]
    des_id: Int
    helps: [Help]
    last_evaluation: Evaluation @field(resolver: "App\\GraphQL\\Queries\\LastEvaluation")
    leader: Employee @field(resolver: "App\\GraphQL\\Queries\\Leader")
    prodep_key: String
    evaluations: [Evaluation]
    lgacs: [LGAC]
    networks: [Network]
    benefited_employee: Employee @belongsTo(relation: "benefited_employee")
}

type Help {
    id: ID!
    active: Boolean
    type: String
    date: Date
    amount: Float
    benefited_employee_id: Int
    benefited_employee: Employee @belongsTo(relation: "benefited_employee")
    academic_body: AcademicBody @belongsTo(relation: "academic_body")
}

type Network {
    id: ID!
    active: Boolean
    name: String
    type: String
    class: String
    start_date: Date
    range: String
    finish_date: Date
    academic_body_id: Int
    academic_body: AcademicBody @belongsTo(relation: "academic_body")
}

type LGAC {
    id: ID!
    key: String!
    name: String!
    description: String!
    active: Boolean!
    academic_body: AcademicBody! @belongsTo(relation: "academic_body")
}

type Discipline {
    id: ID!
    name: String
}

type UABCArea {
    id: ID! @rename(attribute: "narea")
    area: String
}

type DES {
    id: ID! @rename(attribute: "cdes")
    des: String
}

type Evaluation {
    id: ID
    active: Boolean
    grade: String
    finish_date: Date
    start_date: Date
    academic_body: AcademicBody! @belongsTo(relation: "academic_bodies")
}


type ProdepArea {
    id: ID!
    name: String
}

